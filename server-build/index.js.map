{
  "version": 3,
  "sources": ["../server/index.ts"],
  "sourcesContent": ["import crypto from 'crypto';\nimport path from 'path';\nimport { fileURLToPath } from 'url';\n\nimport { createRequestHandler, GetLoadContextFunction } from '@remix-run/express';\nimport { broadcastDevReady, type ServerBuild } from '@remix-run/node';\nimport address from 'address';\nimport chalk from 'chalk';\nimport { watch } from 'chokidar';\nimport closeWithGrace from 'close-with-grace';\nimport compression from 'compression';\nimport express, { static as expressStatic } from 'express';\nimport getPort, { portNumbers } from 'get-port';\nimport helmet from 'helmet';\nimport morgan, { token } from 'morgan';\n\n// eslint-disable-next-line @typescript-eslint/prefer-ts-expect-error, @typescript-eslint/ban-ts-comment\n// @ts-ignore - this file may not exist if you haven't built yet, but it will\n// definitely exist by the time the dev or prod server actually runs.\n// eslint-disable-next-line import/no-unresolved\nimport * as remixBuild from '../build/index.js';\n\nconst MODE = process.env.NODE_ENV;\n\nconst BUILD_PATH = '../build/index.js';\n\nconst build = remixBuild as unknown as ServerBuild;\nlet devBuild = build;\n\nconst app = express();\n\nconst getHost = (req: { get: (key: string) => string | undefined }) => {\n  return req.get('X-Forwarded-Host') ?? req.get('host') ?? '';\n};\n\n// ensure HTTPS only (X-Forwarded-Proto comes from Fly)\napp.use((req, res, next) => {\n  const proto = req.get('X-Forwarded-Proto');\n  const host = getHost(req);\n  if (proto === 'http') {\n    res.set('X-Forwarded-Proto', 'https');\n    res.redirect(`https://${host}${req.originalUrl}`);\n    return;\n  }\n  next();\n});\n\n// no ending slashes for SEO reasons\n// https://github.com/epicweb-dev/epic-stack/discussions/108\napp.use((req, res, next) => {\n  if (req.path.endsWith('/') && req.path.length > 1) {\n    const query = req.url.slice(req.path.length);\n    const safepath = req.path.slice(0, -1).replace(/\\/+/g, '/');\n    res.redirect(301, safepath + query);\n  } else {\n    next();\n  }\n});\n\napp.use(compression());\n\n// http://expressjs.com/en/advanced/best-practice-security.html#at-a-minimum-disable-x-powered-by-header\napp.disable('x-powered-by');\n\n// Remix fingerprints its assets so we can cache forever.\napp.use('/build', expressStatic('public/build', { immutable: true, maxAge: '1y' }));\n\n// Aggressively cache fonts for a year\napp.use('/fonts', expressStatic('public/fonts', { immutable: true, maxAge: '1y' }));\n\n// Everything else (like favicon.ico) is cached for an hour. You may want to be\n// more aggressive with this caching.\napp.use(expressStatic('public', { maxAge: '1h' }));\n\ntoken('url', (req) => decodeURIComponent(req.url ?? ''));\n// @ts-expect-error - morgan types aren't defined specifically to work with Express, but they do\napp.use(morgan('tiny'));\n\napp.use((_req, res, next) => {\n  res.locals.cspNonce = crypto.randomBytes(16).toString('hex');\n  next();\n});\n\napp.use(\n  helmet({\n    crossOriginEmbedderPolicy: false,\n    contentSecurityPolicy: {\n      directives: {\n        'connect-src': [\n          MODE === 'development' ? 'ws:' : null,\n          process.env.SENTRY_DSN ? '*.ingest.sentry.io' : null,\n          \"'self'\",\n        ].filter(Boolean),\n        'font-src': [\"'self'\"],\n        'frame-src': [\"'self'\"],\n        'img-src': [\"'self'\", 'data:'],\n        'script-src': [\"'strict-dynamic'\", \"'self'\", (_, res) => `'nonce-${res.locals.cspNonce}'`],\n        'script-src-attr': [(_, res) => `'nonce-${res.locals.cspNonce}'`],\n        'upgrade-insecure-requests': null,\n      },\n    },\n  }),\n);\n\nconst getRequestHandler = (build: ServerBuild) => {\n  const getLoadContext: GetLoadContextFunction = (_, res) => ({ cspNonce: res.locals.cspNonce });\n\n  return createRequestHandler({ build, mode: MODE, getLoadContext });\n};\n\napp.all(\n  '*',\n  MODE === 'development'\n    ? (...args) => getRequestHandler(devBuild)(...args)\n    : getRequestHandler(build),\n);\n\nconst desiredPort = Number(process.env.PORT ?? 3000);\nconst portToUse = await getPort({ port: portNumbers(desiredPort, desiredPort + 100) });\n\nconst server = app.listen(portToUse, () => {\n  const addy = server.address();\n  const portUsed =\n    desiredPort === portToUse ? desiredPort : addy && typeof addy === 'object' ? addy.port : 0;\n\n  if (portUsed !== desiredPort) {\n    console.warn(\n      chalk.yellow(`\u26A0\uFE0F  Port ${desiredPort} is not available, using ${portUsed} instead.`),\n    );\n  }\n  console.log(`\uD83D\uDE80  We have liftoff!`);\n  const localUrl = `http://localhost:${portUsed}`;\n  let lanUrl: string | null = null;\n\n  // Address package does not in fact has a named export `ip`\n  // eslint-disable-next-line import/no-named-as-default-member\n  const localIp = address.ip() as string;\n  // Check if the address is a private ip\n  // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n  // https://github.com/facebook/create-react-app/blob/d960b9e38c062584ff6cfb1a70e1512509a966e7/packages/react-dev-utils/WebpackDevServerUtils.js#LL48C9-L54C10\n  if (/^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(localIp)) {\n    lanUrl = `http://${localIp}:${portUsed}`;\n  }\n\n  console.log(\n    `\n${chalk.bold('Local:')}            ${chalk.cyan(localUrl)}\n${lanUrl ? `${chalk.bold('On Your Network:')}  ${chalk.cyan(lanUrl)}` : ''}\n${chalk.bold('Press Ctrl+C to stop')}\n\t\t`.trim(),\n  );\n\n  if (MODE === 'development') {\n    void broadcastDevReady(build);\n  }\n});\n\ncloseWithGrace(async () => {\n  await new Promise((resolve, reject) => {\n    server.close((e) => (e ? reject(e) : resolve('ok')));\n  });\n});\n\n// during dev, we'll keep the build module up to date with the changes\nif (MODE === 'development') {\n  const reloadBuild = async () => {\n    devBuild = (await import(`${BUILD_PATH}?update=${Date.now()}`)) as ServerBuild;\n    void broadcastDevReady(devBuild);\n  };\n\n  const dirname = path.dirname(fileURLToPath(import.meta.url));\n  const watchPath = path.join(dirname, BUILD_PATH).replace(/\\\\/g, '/');\n  const watcher = watch(watchPath, { ignoreInitial: true });\n  watcher.on('all', reloadBuild);\n}\n"],
  "mappings": "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",
  "names": ["build"]
}
